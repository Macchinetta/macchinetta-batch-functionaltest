<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>macchinetta-batch-functionaltest-web</artifactId>
    <packaging>war</packaging>

    <parent>
        <groupId>jp.co.ntt.fw.macchinetta.batch</groupId>
        <artifactId>macchinetta-batch-functionaltest-build</artifactId>
        <version>2.4.0.RELEASE</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <name>web</name>
    <description>Web application driver for functionality test using Macchinetta Batch Framework</description>
    <inceptionYear>2017</inceptionYear>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>manual</distribution>
        </license>
    </licenses>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java-version}</source>
                        <target>${java-version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>${gmavenplus-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>addTestSources</goal>
                                <goal>compileTests</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>**/*Spec.java</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${encoding}</encoding>
                    </configuration>
                </plugin>
                <!-- licence and formatter -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license-maven-plugin.version}</version>
                    <configuration>
                        <header>${project.root.basedir}/../license/header.txt</header>
                        <includes>
                            <include>src/**/*.java</include>
                            <include>src/**/*.groovy</include>
                        </includes>
                        <encoding>${encoding}</encoding>
                        <headerDefinitions>
                            <headerDefinition>${project.root.basedir}/../license/header-definition.xml
                            </headerDefinition>
                        </headerDefinitions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <version>${formatter-maven-plugin.version}</version>
                    <configuration>
                        <configFile>${project.root.basedir}/../eclipse/formatter.xml
                        </configFile>
                        <lineEnding>LF</lineEnding>
                    </configuration>
                </plugin>

                <!-- for Async Batch (Web Container) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <webResources>
                            <resource>
                                <directory>${project.root.basedir}/src/main/webapp/WEB-INF</directory>
                                <targetPath>WEB-INF</targetPath>
                                <filtering>true</filtering>
                                <excludes>
                                    <exclude>**/.gitkeep</exclude>
                                </excludes>
                            </resource>
                        </webResources>
                        <warName>${project.artifactId}</warName>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven3-plugin</artifactId>
                    <version>${cargo-maven3-plugin.version}</version>
                    <configuration>
                        <container>
                            <containerId>${container.id}</containerId>
                            <type>remote</type>
                        </container>
                        <configuration>
                            <type>runtime</type>
                            <properties>
                                <cargo.hostname>${remote.hostname}</cargo.hostname>
                                <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
                                <cargo.remote.username>${remote.username}</cargo.remote.username>
                                <cargo.remote.password>${remote.password}</cargo.remote.password>
                            </properties>
                        </configuration>
                        <deployables>
                            <deployable>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <type>war</type>
                            </deployable>
                        </deployables>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <executions>
                    <execution>
                        <id>deploy-cargo</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>deployer-deploy</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>undeploy-cargo</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>deployer-undeploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <!-- Setting the resource according to the test environment -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.root.basedir}/${project.config.resource.directory.web}</directory>
            </resource>
            <resource>
                <directory>${project.root.basedir}/${project.config.resource.directory.rdbms}</directory>
            </resource>
            <resource>
                <directory>${project.root.basedir}/${project.config.resource.directory.mongo}</directory>
            </resource>
            <resource>
                <directory>${project.root.basedir}/${project.config.resource.directory.beandefinition}</directory>
            </resource>
        </resources>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${org.springframework.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>jp.co.ntt.fw.macchinetta.batch</groupId>
                <artifactId>macchinetta-batch-functionaltest-util</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${org.spockframework.spock-core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-spring</artifactId>
                <version>${org.spockframework.spock-spring.version}</version>
            </dependency>

            <dependency>
                <groupId>com.athaydes</groupId>
                <artifactId>spock-reports</artifactId>
                <version>${com.athaydes.spock-reports.version}</version>
            </dependency>

            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${org.dbunit.dbunit.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.oracle.database.jdbc</groupId>
                        <artifactId>ojdbc8</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy.modules.http-builder</groupId>
                <artifactId>http-builder</artifactId>
                <version>${org.codehaus.groovy.modules.http-builder.version}</version>
            </dependency>

            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>${oracle.jdbc.artifactId}</artifactId>
                <version>${oracle.jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-json</artifactId>
                <version>${groovy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-templates</artifactId>
                <version>${groovy.version}</version>
            </dependency>

            <dependency>
                <groupId>jp.co.ntt.fw.macchinetta.batch</groupId>
                <artifactId>macchinetta-batch-functionaltest-app${appname.suffix}</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jp.co.ntt.fw.macchinetta.batch</groupId>
            <artifactId>macchinetta-batch-functionaltest-util</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.athaydes</groupId>
            <artifactId>spock-reports</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.oracle.database.jdbc</groupId>
                    <artifactId>ojdbc8</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy.modules.http-builder</groupId>
            <artifactId>http-builder</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-json</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-templates</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>${jdbc.driver.groupId}</groupId>
            <artifactId>${jdbc.driver.artifactId}</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>jp.co.ntt.fw.macchinetta.batch</groupId>
            <artifactId>macchinetta-batch-functionaltest-app${appname.suffix}</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <!-- == Maven Plugin Versions == -->
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <gmavenplus-plugin.version>1.13.1</gmavenplus-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M7</maven-failsafe-plugin.version>
        <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
        <license-maven-plugin.version>4.2.rc3</license-maven-plugin.version>
        <formatter-maven-plugin.version>2.20.0</formatter-maven-plugin.version>
        <maven-war-plugin.version>3.3.2</maven-war-plugin.version>
        <cargo-maven3-plugin.version>1.10.1</cargo-maven3-plugin.version>

        <!-- == Dependency Versions == -->
        <!-- == Spring Boot Dependencies == -->
        <org.springframework.boot.version>3.0.1</org.springframework.boot.version>

        <!-- == Spock == -->
        <org.spockframework.spock-core.version>2.2-M3-groovy-3.0</org.spockframework.spock-core.version>
        <org.spockframework.spock-spring.version>2.2-M3-groovy-3.0</org.spockframework.spock-spring.version>
        <com.athaydes.spock-reports.version>2.3.0-groovy-3.0</com.athaydes.spock-reports.version>

        <!-- == DBUnit == -->
        <org.dbunit.dbunit.version>2.7.3</org.dbunit.dbunit.version>

        <!-- == Groovy == -->
        <org.codehaus.groovy.modules.http-builder.version>0.7.1</org.codehaus.groovy.modules.http-builder.version>
        <groovy.version>3.0.11</groovy.version>

        <!-- == Project Properties == -->
        <project.root.basedir>${project.basedir}</project.root.basedir>

        <!-- == Environment Properties == -->
        <jdbc.driver.groupId>org.postgresql</jdbc.driver.groupId>
        <jdbc.driver.artifactId>postgresql</jdbc.driver.artifactId>
        <project.config.resource.directory.rdbms>config/rdbms/postgresql14/local</project.config.resource.directory.rdbms>
        <project.config.resource.directory.mongo>config/mongo/local</project.config.resource.directory.mongo>
        <project.config.resource.directory.beandefinition>config/beandefinition/${profile-name}</project.config.resource.directory.beandefinition>

    </properties>

    <profiles>
        <profile>
            <id>javaconfig</id>
            <properties>
                <profile-name>javaconfig</profile-name>
                <appname.suffix></appname.suffix>
            </properties>
        </profile>
        <profile>
            <id>xmlconfig</id>
            <properties>
                <profile-name>xmlconfig</profile-name>
                <appname.suffix>-${profile-name}</appname.suffix>
            </properties>
        </profile>

        <profile>
            <id>tomcat10-local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <container.id>tomcat10x</container.id>
                <remote.hostname>localhost</remote.hostname>
                <servlet.port>8088</servlet.port>
                <remote.username>admin</remote.username>
                <remote.password/>
                <project.config.resource.directory.web>config/web/tomcat10/local</project.config.resource.directory.web>
            </properties>
        </profile>
        <profile>
            <id>tomcat10-it</id>
            <properties>
                <container.id>tomcat10x</container.id>
                <remote.hostname>tomcat</remote.hostname>
                <servlet.port>8080</servlet.port>
                <remote.username>tomcat</remote.username>
                <remote.password>tomcat</remote.password>
                <project.config.resource.directory.web>config/web/tomcat10/it</project.config.resource.directory.web>
            </properties>
        </profile>

        <profile>
            <id>postgresql14-local</id>
            <properties>
                <jdbc.driver.groupId>org.postgresql</jdbc.driver.groupId>
                <jdbc.driver.artifactId>postgresql</jdbc.driver.artifactId>
                <project.config.resource.directory.rdbms>config/rdbms/postgresql14/local</project.config.resource.directory.rdbms>
                <project.config.resource.directory.mongo>config/mongo/local</project.config.resource.directory.mongo>
            </properties>
        </profile>
        <profile>
            <id>postgresql14-it</id>
            <properties>
                <jdbc.driver.groupId>org.postgresql</jdbc.driver.groupId>
                <jdbc.driver.artifactId>postgresql</jdbc.driver.artifactId>
                <project.config.resource.directory.rdbms>config/rdbms/postgresql14/it</project.config.resource.directory.rdbms>
                <project.config.resource.directory.mongo>config/mongo/it</project.config.resource.directory.mongo>
            </properties>
        </profile>
        <profile>
            <id>oracle21c-local</id>
            <properties>
                <jdbc.driver.groupId>com.oracle.database.jdbc</jdbc.driver.groupId>
                <jdbc.driver.artifactId>${oracle.jdbc.artifactId}</jdbc.driver.artifactId>
                <project.config.resource.directory.rdbms>config/rdbms/oracle21c/local</project.config.resource.directory.rdbms>
                <project.config.resource.directory.mongo>config/mongo/local</project.config.resource.directory.mongo>
            </properties>
        </profile>
        <profile>
            <id>oracle21c-it</id>
            <properties>
                <jdbc.driver.groupId>com.oracle.database.jdbc</jdbc.driver.groupId>
                <jdbc.driver.artifactId>${oracle.jdbc.artifactId}</jdbc.driver.artifactId>
                <project.config.resource.directory.rdbms>config/rdbms/oracle21c/it</project.config.resource.directory.rdbms>
                <project.config.resource.directory.mongo>config/mongo/it</project.config.resource.directory.mongo>
            </properties>
        </profile>
    </profiles>
</project>
