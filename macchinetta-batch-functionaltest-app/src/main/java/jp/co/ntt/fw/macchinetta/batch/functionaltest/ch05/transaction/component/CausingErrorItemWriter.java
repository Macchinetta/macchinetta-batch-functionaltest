/*
 * Copyright (C) 2018 NTT Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
package jp.co.ntt.fw.macchinetta.batch.functionaltest.ch05.transaction.component;

import org.springframework.batch.item.ItemWriter;

import java.util.List;

/**
 * ItemWriter causing error.
 *
 * @since 5.0.0
 */
public class CausingErrorItemWriter implements ItemWriter<Object> {

    /**
     * Total wrote count.
     */
    private int totalCount = 0;

    /**
     * Number of error occurrences.
     */
    private int errorOccurNumber = 0;

    /**
     * Generate an exception with the specified number of items.
     *
     * @param items Items
     * @throws Exception Exception to be generated by the specified number of cases.
     */
    @Override
    public void write(List<?> items) throws Exception {

        for (Object item : items) {
            totalCount++;
            if (totalCount >= errorOccurNumber) {
                throw new ItemWriteException("Raised an exception because it has reached the specified number.");
            }
        }

    }

    /**
     * Number of error occurrences.
     *
     * @param errorOccurNumber New number of error occurrences.
     */
    public void setErrorOccurNumber(int errorOccurNumber) {
        this.errorOccurNumber = errorOccurNumber;
    }
}
