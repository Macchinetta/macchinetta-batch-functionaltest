<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
             http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
             http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <import resource="classpath:META-INF/spring/job-base-context.xml"/>

    <context:component-scan base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.common"/>
    <context:component-scan base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.ch08.parallelandmultiple.listener"/>
    <mybatis:scan
            base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.plan;jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.performance"
            factory-ref="jobSqlSessionFactory"/>

    <bean id="planReader" class="org.mybatis.spring.batch.MyBatisCursorItemReader"
          p:queryId="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.plan.SalesPlanDetailRepository.summarizeDetails"
          p:sqlSessionFactory-ref="jobSqlSessionFactory"/>

    <bean id="planWriter" class="org.mybatis.spring.batch.MyBatisBatchItemWriter"
          p:statementId="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.plan.SalesPlanSummaryRepository.create"
          p:sqlSessionTemplate-ref="batchModeSqlSessionTemplate"/>

    <bean id="performanceReader" class="org.mybatis.spring.batch.MyBatisCursorItemReader"
          p:queryId="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.performance.SalesPerformanceDetailRepository.summarizeDetails"
          p:sqlSessionFactory-ref="jobSqlSessionFactory"/>

    <bean id="performanceWriter" class="org.mybatis.spring.batch.MyBatisBatchItemWriter"
          p:statementId="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.performance.SalesPerformanceSummaryRepository.create"
          p:sqlSessionTemplate-ref="batchModeSqlSessionTemplate"/>

    <batch:job id="parallelSummarizeJob" job-repository="jobRepository">
        <batch:split id="parallelSummarizeJob.split" task-executor="parallelTaskExecutor">
            <batch:flow>
                <batch:step id="parallelSummarizeJob.step.plan">
                    <batch:tasklet transaction-manager="jobTransactionManager">
                        <batch:chunk reader="planReader"
                                     writer="planWriter" commit-interval="1"/>
                        <batch:listeners>
                            <batch:listener ref="stepExecutionLoggingListener"/>
                        </batch:listeners>
                    </batch:tasklet>
                </batch:step>
            </batch:flow>
            <batch:flow>
                <batch:step id="parallelSummarizeJob.step.performance">
                    <batch:tasklet transaction-manager="jobTransactionManager">
                        <batch:chunk reader="performanceReader"
                                     writer="performanceWriter" commit-interval="1"/>
                        <batch:listeners>
                            <batch:listener ref="stepExecutionLoggingListener"/>
                        </batch:listeners>
                    </batch:tasklet>
                </batch:step>
            </batch:flow>
        </batch:split>

        <batch:listeners>
            <batch:listener ref="jobExecutionLoggingListener"/>
        </batch:listeners>
    </batch:job>

    <task:executor id="parallelTaskExecutor" pool-size="10" queue-capacity="10"/>

</beans>
