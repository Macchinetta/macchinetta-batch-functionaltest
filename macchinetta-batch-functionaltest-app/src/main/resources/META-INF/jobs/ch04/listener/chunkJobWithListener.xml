<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/batch https://www.springframework.org/schema/batch/spring-batch.xsd
             http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <import resource="classpath:META-INF/spring/job-base-context.xml"/>

    <context:component-scan
            base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.plan,
            jp.co.ntt.fw.macchinetta.batch.functionaltest.ch04.listener"/>
    <mybatis:scan
            base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.plan"
            factory-ref="jobSqlSessionFactory"/>

    <bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step"
          p:resource="file:#{jobParameters['inputFile']}">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer"
                          p:names="branchId,year,month,customerId,amount"/>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper"
                          p:targetType="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.model.plan.SalesPlanDetail"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="writer" class="org.mybatis.spring.batch.MyBatisBatchItemWriter"
          p:statementId="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.repository.plan.SalesPlanDetailRepository.create"
          p:sqlSessionTemplate-ref="batchModeSqlSessionTemplate"/>

    <batch:job id="chunkJobWithListenerWithinJobScope" job-repository="jobRepository">
        <batch:step id="chunkJobWithListenerWithinJobScope.step01">
            <batch:tasklet transaction-manager="jobTransactionManager">
                <batch:chunk reader="reader" processor="amountCheckProcessor" writer="writer" commit-interval="10"/>
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="allProcessListener"/>
        </batch:listeners>
    </batch:job>


    <batch:job id="chunkJobWithListenerWithinStepScope" job-repository="jobRepository">
        <batch:step id="chunkJobWithListenerWithinStepScope.step01">
            <batch:tasklet transaction-manager="jobTransactionManager">
                <batch:chunk reader="reader" processor="amountCheckProcessor" writer="writer" commit-interval="10"/>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener ref="allProcessListener"/>
            </batch:listeners>
        </batch:step>
    </batch:job>

    <batch:job id="chunkJobWithListenerWithinTaskletScope" job-repository="jobRepository">
        <batch:step id="chunkJobWithListenerWithinTaskletScope.step01">
            <batch:tasklet transaction-manager="jobTransactionManager">
                <batch:chunk reader="reader" processor="amountCheckProcessor" writer="writer" commit-interval="10"/>
                <batch:listeners>
                    <batch:listener ref="allProcessListener"/>
                </batch:listeners>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <batch:job id="chunkJobWithListenerWithinChunkScope" job-repository="jobRepository">
        <batch:step id="chunkJobWithListenerWithinChunkScope.step01">
            <batch:tasklet transaction-manager="jobTransactionManager">
                <batch:chunk reader="reader" processor="amountCheckProcessor" writer="writer" commit-interval="10">
                    <batch:listeners>
                        <batch:listener ref="allProcessListener"/>
                    </batch:listeners>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>
    <batch:job id="chunkJobWithListenerWithinAllScope" job-repository="jobRepository">
        <batch:step id="chunkJobWithListenerWithinAllScope.step01">
            <batch:tasklet transaction-manager="jobTransactionManager">
                <batch:chunk reader="reader" processor="amountCheckProcessor" writer="writer" commit-interval="10">
                    <batch:listeners>
                        <batch:listener ref="allProcessListener"/>
                    </batch:listeners>
                </batch:chunk>
                <batch:listeners>
                    <batch:listener ref="allProcessListener"/>
                </batch:listeners>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener ref="allProcessListener"/>
            </batch:listeners>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="allProcessListener"/>
        </batch:listeners>
    </batch:job>
</beans>
