<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/batch https://www.springframework.org/schema/batch/spring-batch.xsd
             http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <bean class="jp.co.ntt.fw.macchinetta.batch.functionaltest.config.JobBaseContextConfig"/>

    <context:component-scan base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.app.common"/>
    <context:component-scan base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.ch05.exclusivecontrol"/>
    <mybatis:scan
            base-package="jp.co.ntt.fw.macchinetta.batch.functionaltest.ch05.exclusivecontrol.repository"
            template-ref="batchModeSqlSessionTemplate"/>

    <bean id="reader" class="org.mybatis.spring.batch.MyBatisCursorItemReader" scope="step"
          p:queryId="jp.co.ntt.fw.macchinetta.batch.functionaltest.ch05.exclusivecontrol.repository.ExclusiveControlRepository.branchIdFindByName"
          p:sqlSessionFactory-ref="jobSqlSessionFactory">
        <property name="parameterValues">
            <map>
                <entry key="branchName" value="#{jobParameters['branchName']}"/>
            </map>
        </property>
    </bean>

    <bean id="writer" class="org.mybatis.spring.batch.MyBatisBatchItemWriter" scope="step"
          p:statementId="jp.co.ntt.fw.macchinetta.batch.functionaltest.ch05.exclusivecontrol.repository.ExclusiveControlRepository.branchUpdate"
          p:sqlSessionTemplate-ref="batchModeSqlSessionTemplate"
          p:assertUpdates="#{new Boolean(jobParameters['assertUpdates'])}"/>

    <batch:job id="chunkPessimisticLockCheckJob" job-repository="jobRepository">
        <batch:step id="chunkPessimisticLockCheckJob.step01">
            <batch:tasklet transaction-manager="jobTransactionManager">
                <batch:chunk reader="reader" processor="branchEditWithkPessimisticLockItemProcessor"
                             writer="writer" commit-interval="3"/>
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="jobExecutionLoggingListener"/>
        </batch:listeners>
    </batch:job>

</beans>
